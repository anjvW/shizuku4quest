name: App

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          sdk-platform: '34'
          sdk-build-tools: '34.0.0'
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-app-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps
      - name: Cache Gradle Build
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-app-${{ github.sha }}
          restore-keys: |
            gradle-builds
      - name: Build with Gradle
        id: buildWithGradle
        run: |
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          ./gradlew :manager:assembleRelease :manager:assembleDebug -Pdebug.unsigned=true -Prelease.unsigned=true
          
          # 提取APK文件名，使用更健壮的方法
          if ls manager/build/outputs/apk/release/*.apk 1> /dev/null 2>&1; then
            releaseName=$(basename manager/build/outputs/apk/release/*.apk .apk)
            echo "releaseName=$releaseName" >> $GITHUB_OUTPUT
          else
            echo "No release APK found"
          fi
          
          if ls manager/build/outputs/apk/debug/*.apk 1> /dev/null 2>&1; then
            debugName=$(basename manager/build/outputs/apk/debug/*.apk .apk)
            echo "debugName=$debugName" >> $GITHUB_OUTPUT
          else
            echo "No debug APK found"
          fi
      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.buildWithGradle.outputs.releaseName }}
          path: "manager/build/outputs/apk/release/*.apk"
      - name: Upload debug
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.buildWithGradle.outputs.debugName }}
          path: "manager/build/outputs/apk/debug/*.apk"
      - name: Upload mappings
        if: success() && hashFiles('manager/build/outputs/mapping/release/*') != ''
        uses: actions/upload-artifact@v4
        with:
          name: mappings
          path: "manager/build/outputs/mapping/release"
